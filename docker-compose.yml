
services:
  nethermind:
    image: nethermind/nethermind:latest
    container_name: starknet-nethermind
    restart: unless-stopped
    ports:
      - "8545:8545"     # JSON-RPC HTTP
      - "8546:8546"     # JSON-RPC WebSocket
      - "30303:30303"   # P2P
    volumes:
      - ./data/nethermind:/nethermind/data
      - ./config/jwt.hex:/nethermind/jwt.hex:ro
    command: >
      --config mainnet
      --datadir /nethermind/data
      --JsonRpc.Enabled true
      --JsonRpc.Host 0.0.0.0
      --JsonRpc.Port 8545
      --JsonRpc.WebSocketsPort 8546
      --JsonRpc.JwtSecretFile /nethermind/jwt.hex
      --JsonRpc.EnabledModules Eth,Subscribe,Trace,TxPool,Web3,Personal,Proof,Net,Parity,Health,Rpc,Engine
      --log info
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - starknet-network

  lighthouse:
    image: sigp/lighthouse:latest
    container_name: starknet-lighthouse
    restart: unless-stopped
    init: true
    ports:
      - "9000:9000"     # P2P
      - "5052:5052"     # HTTP API
    volumes:
      - ./data/lighthouse:/opt/lighthouse/data
      - ./config/jwt.hex:/opt/lighthouse/jwt.hex:ro
    command: >
      lighthouse bn
      --network mainnet
      --datadir /opt/lighthouse/data
      --http
      --http-address 0.0.0.0
      --http-port 5052
      --execution-endpoint http://nethermind:8545
      --execution-jwt /opt/lighthouse/jwt.hex
      --checkpoint-sync-url https://mainnet.checkpoint.sigp.io
      --disable-deposit-contract-sync
    depends_on:
      - nethermind
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5052/eth/v1/node/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - starknet-network

  juno-snapshot:
    image: curlimages/curl:latest
    container_name: starknet-juno-snapshot
    volumes:
      - ./data/juno:/var/lib/juno
    environment:
      - SNAPSHOT_URL=https://juno-snapshots.nethermind.io/files/mainnet/latest
    command: >
      sh -c "
      if [ ! -f /var/lib/juno/.snapshot_downloaded ]; then
        echo 'Downloading Juno snapshot... This may take 1-3 hours';
        
        # Use curl with retry and resume capabilities
        curl -L -C - --max-time 7200 --retry 5 --retry-delay 30 \
             -o /tmp/juno_mainnet.tar \"$${SNAPSHOT_URL}\" &&
        
        echo 'Extracting snapshot...' &&
        tar -xf /tmp/juno_mainnet.tar -C /var/lib/juno &&
        rm -f /tmp/juno_mainnet.tar &&
        touch /var/lib/juno/.snapshot_downloaded &&
        echo 'Snapshot downloaded and extracted successfully!';
      else
        echo 'Snapshot already exists, skipping download';
      fi
      "
    networks:
      - starknet-network

  juno:
    image: nethermind/juno:latest
    container_name: starknet-juno
    restart: unless-stopped
    ports:
      - "6060:6060"     # HTTP API
    volumes:
      - ./data/juno:/var/lib/juno
      - ./config/juno.yaml:/etc/juno/juno.yaml:ro
      - ./config/validator.key:/var/lib/juno/validator.key:ro
    environment:
      - VALIDATOR_NAME=${VALIDATOR_NAME:-starknet-validator}
      - OPERATIONAL_ADDRESS=${OPERATIONAL_ADDRESS}
    command: >
      --config /etc/juno/juno.yaml
      --db-path /var/lib/juno
      --http
      --http-port 6060
      --http-host 0.0.0.0
      --log-level INFO
    depends_on:
      - lighthouse
      - juno-snapshot
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6060/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 180s
    networks:
      - starknet-network
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4'
        reservations:
          memory: 4G
          cpus: '2'
    tmpfs:
      - /tmp:size=2G,noatime

  prometheus:
    image: prom/prometheus:latest
    container_name: starknet-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - starknet-network

  grafana:
    image: grafana/grafana:latest
    container_name: starknet-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - starknet-network

networks:
  starknet-network:
    driver: bridge

volumes:
  nethermind-data:
  lighthouse-data:
  juno-data:
  prometheus-data:
  grafana-data: